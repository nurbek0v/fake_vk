//
//  NewsfeedInteractor.swift
//  KalchabekNurbekov_vk
//
//  Created by Kalchabek Nurbekov on 11.11.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NewsfeedBusinessLogic {
    func doSomething(request: Newsfeed.Something.Request.RequestType)
}


class NewsfeedInteractor: NewsfeedBusinessLogic {
    
    
    var presenter: NewsfeedPresentationLogic?
    var service: NewsfeedService?
    //private var reveledPostIds = [Int]()
    //private var feedResponse: FeedResponse?
   // private var fetcher: DataFetcher = NetworkDataFetcher(networking: NetworkService())
    
    // MARK: Do something
    
    func doSomething(request: Newsfeed.Something.Request.RequestType) {

        if service == nil {
            service = NewsfeedService()
        }

        switch request {
        case .getNewsfeed:
            service?.getFeed(completion: { [ weak self ] (revealedPostIds, feed) in
                self?.presenter?.presentSomething(response: .presentNewsfeed(feed: feed, reveledPostIds: revealedPostIds))
            })
        case .getUser:
            service?.getUser(completion: { [ weak self ] (user) in
                self?.presenter?.presentSomething(response: .presentUserInfo(user: user))
            })
        case .revelPostIds(postId: let postId):
            service?.revealPostIds(forPostId: postId, completion: { [ weak self ] (revealedPostIds, feed) in
                self?.presenter?.presentSomething(response: .presentNewsfeed(feed: feed, reveledPostIds: revealedPostIds))
            })
        case .getNextBatch: 
            self.presenter?.presentSomething(response: .presentFooterLoader)
            service?.getNextBatch(completion: { [ weak self ] (revealedPostIds, feed) in
                self?.presenter?.presentSomething(response: .presentNewsfeed(feed: feed, reveledPostIds: revealedPostIds))
            })
        }
    }
}

//
//  NewsfeedViewController.swift
//  KalchabekNurbekov_vk
//
//  Created by Kalchabek Nurbekov on 11.11.2022.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Foundation

protocol NewsfeedDisplayLogic: class {
    func displaySomething(viewModel: Newsfeed.Something.ViewModel.ViewModelData)
}

class NewsfeedViewController: UITableViewController, NewsfeedDisplayLogic {
  var interactor: NewsfeedBusinessLogic?
  var router: (NSObjectProtocol & NewsfeedRoutingLogic )?

    private var feedViewModel = FeedViewModel.init(cells: [])
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController           = self
    let interactor               = NewsfeedInteractor()
    let presenter                = NewsfeedPresenter()
    let router                   = NewsfeedRouter()
    viewController.interactor    = interactor
    viewController.router        = router
    interactor.presenter         = presenter
    presenter.viewController     = viewController
    router.viewController        = viewController
    //router.dataStore             = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
      setup()
    //doSomething()
      tableView.register(UINib(nibName: "NewsfeedCell", bundle: nil), forCellReuseIdentifier: NewsfeedCell.reuseId)
      tableView.separatorStyle = .none
      tableView.backgroundColor = .clear
      view.backgroundColor = UIColor(named: "AccentColor")
      interactor?.doSomething(request: .getNewsfeed)
      
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
//  func doSomething()
//  {
//      let request = Newsfeed.Something.Request()
//      interactor?.doSomething(request: .)
//  }
  
    func displaySomething(viewModel: Newsfeed.Something.ViewModel.ViewModelData) {
    //nameTextField.text = viewModel.name
        switch viewModel {
        case .displayNewdfeed(feedViewModel: let feedViewModel):
            self.feedViewModel = feedViewModel
            tableView.reloadData()
        }
  }
    

    //MARK: - Table View Data Source
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return feedViewModel.cells.count
    }
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: NewsfeedCell.reuseId, for: indexPath) as! NewsfeedCell
        let cellViewModel = feedViewModel.cells[indexPath.row]
        cell.set(viewModel: cellViewModel)
        return cell
    }
    //MARK: - Table View Delegate
//    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
//        print("select.row")
//        interactor?.doSomething(request: .getFeed)
//    }
    override func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        let cellViewModel = feedViewModel.cells[indexPath.row]
        return cellViewModel.sizes.totalHeight
    }
    
}

